library(pathfindR)
f="/storage/Documents/service/biologie/marechal/analysis/20231218_crispr_review/reactome_GO/list_go1/list_go1.tsv"
o="/storage/Documents/service/biologie/marechal/analysis/20231218_crispr_review/reactome_GO/list_go1"
g_list= read.csv(
f,
header = TRUE,
sep="\t",
na.strings = "",
stringsAsFactors=FALSE
)
out=paste(o,"/out",sep='')
out
output_df <- run_pathfindR(
g_list,
output_dir = out,
gene_sets = "Reactome",
min_gset_size = 5,
max_gset_size = 500,
n_processes = 4
)
output_df_clustered <- cluster_enriched_terms(output_df, plot_dend = FALSE, plot_clusters_graph = FALSE)
# knitr::kable(head(output_df_clustered, 2))
# knitr::kable(output_df_clustered[output_df_clustered$Status == "Representative", ])
# plotting only selected clusters for better visualization
selected_clusters <- subset(output_df_clustered[output_df_clustered$Status == "Representative", ], Cluster %in% 1:10)
out=paste(o,"/out/enrichment_chart.png",sep='')
png(
filename = out,
res = 250,
width = 8,
height = 4,
units = "in"
)
plot(enrichment_chart(selected_clusters, plot_by_cluster = TRUE))
dev.off()
out=paste(o,"/out/enrichment_chart.svg",sep='')
svg(
filename = out,
width = 8,
height = 4
)
plot(enrichment_chart(selected_clusters, plot_by_cluster = TRUE))
dev.off()
install.packages("optparse")
Sys.getenv("RSTUDIO_PANDOC")
library(pathfindR)
path_to_pin_file <- get_pin_file(
source = "BioGRID", org = "Homo_sapiens",
)
gsets_list <- get_gene_sets_list(
source = "Reactome",
species = "Homo sapiens"
)
gsets_list
gsets_list$`R-HSA-6783310`
gsets_list$`R-HSA-6783310`
gsets_list
gsets_list
gsets_list$gene_sets
path_to_pin_file <- get_pin_file(org = "Homo_sapiens")
path_to_pin_file
get_gene_sets_list
get_reactome_gsets
get_reactome_gsets
get_gene_sets_list
get_reactome_gsets()
get_reactome_gsets()
get_reactome_gsets
methods(pathfindR)
methods(get_pin_file)
getAnywhere(pathfindR.get_pin_file)
getAnywhere(pathfindR:::get_reactome_gsets)
methods(get_pin_file)
showMethods(get_reactome_gsets)
showMethods(get_reactome_gsets())
get_reactome_gsets
stats:::.get_reactome_gsets
gsets_list$gene_sets
gsets_list$gene_sets$HSA-6783310
gsets_list$gene_sets$HSA-6783310
gsets_list$gene_sets$R-HSA-6783310
gsets_list$gene_sets$`R-HSA-6783310`
selected_clusters
f="/storage/Documents/service/biologie/marechal/analysis/20231218_crispr_review/reactome_GO/list_go2/list_go2.tsv"
o="/storage/Documents/service/biologie/marechal/analysis/20231218_crispr_review/reactome_GO/list_go2"
g_list= read.csv(
f,
header = TRUE,
sep="\t",
na.strings = "",
stringsAsFactors=FALSE
)
View(g_list)
out=paste(o,"/out",sep='')
output_df <- run_pathfindR(
g_list,
output_dir = out,
gene_sets = "Reactome",
min_gset_size = 5,
max_gset_size = 500,
n_processes = 4
)
output_df_clustered <- cluster_enriched_terms(output_df, plot_dend = FALSE, plot_clusters_graph = FALSE)
output_df
View(output_df)
View(output_df)
cluster_enriched_terms(output_df, plot_dend = FALSE, plot_clusters_graph = FALSE)
output_df
View(output_df)
f="/storage/Documents/service/biologie/marechal/analysis/20231218_crispr_review/reactome_GO/list_go2/list_go2.tsv"
o="/storage/Documents/service/biologie/marechal/analysis/20231218_crispr_review/reactome_GO/list_go2"
if (file.exists(o)){
stop("Output directory already exists. Please delete before running.n", call.=FALSE)
}
o="/storage/Documents/service/biologie/marechal/analysis/20231218_crispr_review/reactome_GO/list_go2/out"
if (file.exists(o)){
stop("Output directory already exists. Please delete before running.n", call.=FALSE)
}
g_list= read.csv(
f,
header = TRUE,
sep="\t",
na.strings = "",
stringsAsFactors=FALSE
)
gsets_list <- get_gene_sets_list(
source = "Reactome",
species = "Homo sapiens"
)
output_df <- run_pathfindR(
g_list,
output_dir = o,
# gene_sets = "Reactome",
custom_genes = gsets_list$gene_sets,
custom_descriptions = gsets_list$descriptions,
min_gset_size = 5,
max_gset_size = 500,
n_processes = 4
)
View(output_df)
out=paste(o,"/enrichment_chart.png",sep='')
png(
filename = out,
res = 250,
width = 8,
height = 4,
units = "in"
)
plot(enrichment_chart(output_df, plot_by_cluster = TRUE))
dev.off()
plot(enrichment_chart(output_df, plot_by_cluster = FALSE))
dev.off()
out=paste(o,"/enrichment_chart.png",sep='')
png(
filename = out,
res = 250,
width = 8,
height = 4,
units = "in"
)
# plot(enrichment_chart(selected_clusters, plot_by_cluster = TRUE))
plot(enrichment_chart(output_df, plot_by_cluster = FALSE))
dev.off()
