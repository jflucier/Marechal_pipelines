#!/bin/bash

#SBATCH --job-name=fold_multi
#SBATCH -D /home/jflucier/projects/def-marechal/programs/Marechal_pipelines/environment/test.colabfold.multi
#SBATCH -o /home/jflucier/projects/def-marechal/programs/Marechal_pipelines/environment/test.colabfold.multi/slurm-%A_%a.out
#SBATCH --account=def-marechal
#SBATCH --time=2:00:00
#SBATCH --cpus-per-task=8
#SBATCH --gres=gpu:1
#SBATCH --mem=40G

set -ex

echo "activating env"
mamba activate openfold_env

export OF_SCRIPTS=/home/def-marechal/programs/openfold/scripts
export AF_ANALYSIS_SCRIPTS=/home/def-marechal/programs/Marechal_pipelines/AF2multimer-analysis
export WORK=/home/def-marechal/programs/Marechal_pipelines/environment
export IN=${WORK}/test.openfold.multi
export OUT=${WORK}/test.openfold.multi/openfold.multi
export DOWNLOAD_DIR=/tank/jflucier
export NAME="DTX1_1-DTX2_1"

fold_start=`date +%s`
for model in 1 2 3
do
  echo "folding using model $model"
  python3 run_pretrained_openfold.py \
  ${IN} \
  ${DOWNLOAD_DIR}/mmseqs_dbs/pdb_mmcif/mmcif_files \
  --use_precomputed_alignments ${OUT} \
  --config_preset "model_${model}_multimer_v3" \
  --model_device "cuda:0" \
  --output_dir ${OUT}/${NAME} \
  --save_outputs

  #/home/def-marechal/programs/Marechal_pipelines/environment/test.openfold.multi/openfold.multi/DTX1_1_DTX2_1/predictions/DTX1_1-DTX2_1_model_1_multimer_v3_output_dict.pkl
  python ${OF_SCRIPTS}/generate_pae_plddt_plot.py \
  --input_pkl ${OUT}/${NAME}/predictions/${NAME}_model_${model}_multimer_v3_output_dict.pkl \
  --output_dir ${OUT}/${NAME}/predictions/ \
  --basename "${NAME}_model_${model}_multimer_v3_relaxed"

done

convert ${OUT}/${NAME}/predictions/*_pLDDT.png +append ${OUT}/${NAME}/predictions/${NAME}_all_PLDDT.png
convert ${OUT}/${NAME}/predictions/*_PAE.png  +append ${OUT}/${NAME}/predictions/${NAME}_all_PAE.png

python ${OF_SCRIPTS}/generate_coverage_plot.py \
--input_pkl ${OUT}/${NAME}/${NAME}_model_${model}_multimer_v3_feature_dict.pickle \
--output_dir ${OUT}/${NAME}/predictions/ \
--basename "${NAME}_multimer_v3_relaxed"

fold_end=`date +%s`
fold_time=$(((fold_end-fold_start)/60))

echo "running AF2multimer-analysis on $outdir"
# need to create .done.txt file for AF2multimer-analysis
touch ${OUT}/${NAME}/predictions/${NAME}.done.txt
mkdir -p ${OUT}/${NAME}/predictions/unrelaxed
mv ${OUT}/${NAME}/predictions/*unrelaxed.pdb ${OUT}/${NAME}/predictions/unrelaxed/
python ${AF_ANALYSIS_SCRIPTS}/colabfold_analysis.py ${OUT}/${NAME}/predictions

echo "zipping results"
cd ${OUT}/${NAME}/predictions
zip -r ${NAME}.zip * -x "*.pkl"
mv ${NAME}.zip ${OUT}/

# output: exp_name\tfold time
# in min
echo "write fold time in /tank/jflucier/run_stats.fold.tsv"
echo -e "${NAME}\t$fold_time" >> /tank/jflucier/run_stats.fold.tsv


echo "done!"


