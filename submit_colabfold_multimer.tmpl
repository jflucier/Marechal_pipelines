#!/bin/bash

#SBATCH --job-name=$job_name
#SBATCH -D $outdir
#SBATCH -o $outdir/slurm-%A_%a.out
#SBATCH --account=def-marechal
#SBATCH --time=24:00:00
#SBATCH --cpus-per-task=8
#SBATCH --gres=gpu:1
#SBATCH --mem=40G

set -ex

module load gcc/9.3.0 cuda/11.4 openmpi/4.0.3 openmm/8.0.0 mmseqs2/14-7e284 hh-suite/3.3.0 hmmer/3.2.1 httpproxy/1.0
source /home/jflucier/projects/def-marechal/programs/colabfold_env/bin/activate

export TF_FORCE_UNIFIED_MEMORY="1"
export XLA_PYTHON_CLIENT_MEM_FRACTION="4.0"
export XLA_PYTHON_CLIENT_ALLOCATOR="platform"
export TF_FORCE_GPU_ALLOW_GROWTH="true"

if [ -z "$$(ls -A $outdir/pdb)" ]; then
  echo "No pdb provided, will fold without templates"
  echo "running colabfold on $fasta"
  colabfold_batch \
  --use-gpu-relax --amber --num-relax 3 \
  --num-models 3 \
  --num-recycle 30 --recycle-early-stop-tolerance 0.5 \
  --model-type alphafold2_multimer_v3 \
  --data $colabfold_db \
  $fasta \
  $outdir
else
  echo "PDB provided, will fold with templates: $$(ls -A $outdir/pdb)"
  echo "running colabfold on $fasta"
  colabfold_batch \
  --use-gpu-relax --amber --num-relax 3 \
  --num-models 3 \
  --num-recycle 30 --recycle-early-stop-tolerance 0.5 \
  --templates --custom-template-path $outdir/pdb \
  --model-type alphafold2_multimer_v3 \
  --data $colabfold_db \
  $fasta \
  $outdir
fi

echo "running AF2multimer-analysis"
mkdir -p $outdir/unrelaxed
mv $outdir/*unrelaxed_* $outdir/unrelaxed/
python $script_path/AF2multimer-analysis/colabfold_analysis.py $outdir
mv $out_analysis/* $outdir/
#rm -r $out_analysis

echo "zipping results"
cd $outdir/../
zip -r $job_name.zip $job_name/*

echo "done!"

